plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jsonschema2pojo' version '1.1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

configurations {
    openapiGenerator
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    openapiGenerator 'org.openapitools:openapi-generator-cli:7.4.0'
}

task generateApi(type: JavaExec) {
    group = 'data'
    description = 'Generuje kód z OpenAPI specifikace'
    classpath = configurations.openapiGenerator
    mainClass.set('org.openapitools.codegen.OpenAPIGenerator')

    args = [
            'generate',
            '-g', 'spring',
            '-i', 'src/main/resources/openapi/api.yaml',
            '-o', "$buildDir/generated",
            '--additional-properties=useSpringBoot=true,interfaceOnly=true,modelPackage=com.example.api.model,apiPackage=com.example.api.controller,basePackage=com.example.api,useJakartaEe=true'
    ]
}

task generateFrontendApi(type: JavaExec) {
    group = 'data'
    description = 'Generuje kód z OpenAPI specifikace'
    classpath = configurations.openapiGenerator
    mainClass.set('org.openapitools.codegen.OpenAPIGenerator')

    args = [
            'generate',
            '-g', 'typescript-fetch',
            '-i', 'src/main/resources/openapi/api.yaml',
            '-o', "$buildDir/generated-frontend",
            '--additional-properties=supportsES6=true,typescriptThreePlus=true,modelPropertyNaming=camelCase'
    ]
}

jsonSchema2Pojo {
    source = files("src/main/resources/schema")
    targetPackage = "com.example.mongo.model"
    targetDirectory = file("$buildDir/generated/src/main/java")
    includeGeneratedAnnotation = true
    useJakartaValidation = true
}

sourceSets {
    main {
        java {
            srcDir 'build/generated/src/main/java'
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
