/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.api.controller;

import com.example.api.model.Board;
import com.example.api.model.Game;
import com.example.api.model.GameChangeNameRequest;
import com.example.api.model.GameCreateRequest;
import com.example.api.model.JoinPlayerRequest;
import com.example.api.model.JoinPlayerResponse;
import com.example.api.model.MoveTileRequest;
import com.example.api.model.PagedGameResponse;
import com.example.api.model.SelectTileRequest;
import com.example.api.model.SelectedTileInfo;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-17T09:27:53.578119500+02:00[Europe/Prague]", comments = "Generator version: 7.4.0")
@Validated
@Tag(name = "games", description = "the games API")
public interface GamesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /games : Get paginated list of games
     *
     * @param page  (optional, default to 0)
     * @param size  (optional, default to 10)
     * @return Paginated list of games (status code 200)
     */
    @Operation(
        operationId = "gamesGet",
        summary = "Get paginated list of games",
        responses = {
            @ApiResponse(responseCode = "200", description = "Paginated list of games", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PagedGameResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/games",
        produces = { "application/json" }
    )
    
    default ResponseEntity<PagedGameResponse> gamesGet(
        @Min(0) @Parameter(name = "page", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "page", required = false, defaultValue = "0") Integer page,
        @Min(1) @Parameter(name = "size", description = "", in = ParameterIn.QUERY) @Valid @RequestParam(value = "size", required = false, defaultValue = "10") Integer size
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"total\" : 5, \"size\" : 5, \"page\" : 1, \"items\" : [ { \"players\" : { \"viking\" : { \"name\" : \"name\" }, \"monster\" : { \"name\" : \"name\" } }, \"id\" : \"id\", \"type\" : \"type\", \"board\" : { \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] } }, { \"players\" : { \"viking\" : { \"name\" : \"name\" }, \"monster\" : { \"name\" : \"name\" } }, \"id\" : \"id\", \"type\" : \"type\", \"board\" : { \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] } } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /games/{id}/board : Get game board
     *
     * @param id  (required)
     * @return Board state (status code 200)
     */
    @Operation(
        operationId = "gamesIdBoardGet",
        summary = "Get game board",
        responses = {
            @ApiResponse(responseCode = "200", description = "Board state", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Board.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/games/{id}/board",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Board> gamesIdBoardGet(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") String id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /games/{id}/board/move-tile : Move selected tile to new position
     *
     * @param id  (required)
     * @param moveTileRequest  (required)
     * @return Tile moved (status code 200)
     */
    @Operation(
        operationId = "gamesIdBoardMoveTilePost",
        summary = "Move selected tile to new position",
        responses = {
            @ApiResponse(responseCode = "200", description = "Tile moved")
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/games/{id}/board/move-tile",
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Void> gamesIdBoardMoveTilePost(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") String id,
        @Parameter(name = "MoveTileRequest", description = "", required = true) @Valid @RequestBody MoveTileRequest moveTileRequest
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /games/{id}/board/select-tile : Select a tile
     *
     * @param id  (required)
     * @param selectTileRequest  (required)
     * @return Game overview after tileSelection (status code 200)
     */
    @Operation(
        operationId = "gamesIdBoardSelectTilePost",
        summary = "Select a tile",
        responses = {
            @ApiResponse(responseCode = "200", description = "Game overview after tileSelection", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Game.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/games/{id}/board/select-tile",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Game> gamesIdBoardSelectTilePost(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") String id,
        @Parameter(name = "SelectTileRequest", description = "", required = true) @Valid @RequestBody SelectTileRequest selectTileRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"players\" : { \"viking\" : { \"name\" : \"name\" }, \"monster\" : { \"name\" : \"name\" } }, \"id\" : \"id\", \"type\" : \"type\", \"board\" : { \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /games/{id}/board/selected-tile : Get selected tile and allowed moves
     *
     * @param id  (required)
     * @return Currently selected tile with allowed moves (status code 200)
     *         or No tile selected (status code 404)
     */
    @Operation(
        operationId = "gamesIdBoardSelectedTileGet",
        summary = "Get selected tile and allowed moves",
        responses = {
            @ApiResponse(responseCode = "200", description = "Currently selected tile with allowed moves", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = SelectedTileInfo.class))
            }),
            @ApiResponse(responseCode = "404", description = "No tile selected")
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/games/{id}/board/selected-tile",
        produces = { "application/json" }
    )
    
    default ResponseEntity<SelectedTileInfo> gamesIdBoardSelectedTileGet(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") String id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"allowedMoves\" : [ { \"x\" : 1, \"y\" : 7 }, { \"x\" : 1, \"y\" : 7 } ], \"selectedTile\" : { \"x\" : 1, \"y\" : 7 } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /games/{id} : Get game by ID
     *
     * @param id  (required)
     * @return Game found (status code 200)
     *         or Game not found (status code 404)
     */
    @Operation(
        operationId = "gamesIdGet",
        summary = "Get game by ID",
        responses = {
            @ApiResponse(responseCode = "200", description = "Game found", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Game.class))
            }),
            @ApiResponse(responseCode = "404", description = "Game not found")
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/games/{id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Game> gamesIdGet(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") String id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"players\" : { \"viking\" : { \"name\" : \"name\" }, \"monster\" : { \"name\" : \"name\" } }, \"id\" : \"id\", \"type\" : \"type\", \"board\" : { \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /games/{id}/join : Try to change player
     *
     * @param id  (required)
     * @param joinPlayerRequest  (required)
     * @return New player role (status code 200)
     *         or No tile selected (status code 404)
     */
    @Operation(
        operationId = "gamesIdJoinPost",
        summary = "Try to change player",
        responses = {
            @ApiResponse(responseCode = "200", description = "New player role", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = JoinPlayerResponse.class))
            }),
            @ApiResponse(responseCode = "404", description = "No tile selected")
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/games/{id}/join",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<JoinPlayerResponse> gamesIdJoinPost(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") String id,
        @Parameter(name = "JoinPlayerRequest", description = "", required = true) @Valid @RequestBody JoinPlayerRequest joinPlayerRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PATCH /games : Rename game
     *
     * @param gameChangeNameRequest  (required)
     * @return Game started (status code 200)
     */
    @Operation(
        operationId = "gamesPatch",
        summary = "Rename game",
        responses = {
            @ApiResponse(responseCode = "200", description = "Game started", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Game.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.PATCH,
        value = "/games",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Game> gamesPatch(
        @Parameter(name = "GameChangeNameRequest", description = "", required = true) @Valid @RequestBody GameChangeNameRequest gameChangeNameRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"players\" : { \"viking\" : { \"name\" : \"name\" }, \"monster\" : { \"name\" : \"name\" } }, \"id\" : \"id\", \"type\" : \"type\", \"board\" : { \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /games : Start a new game
     *
     * @param gameCreateRequest  (required)
     * @return Game started (status code 200)
     */
    @Operation(
        operationId = "gamesPost",
        summary = "Start a new game",
        responses = {
            @ApiResponse(responseCode = "200", description = "Game started", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Game.class))
            })
        },
        security = {
            @SecurityRequirement(name = "ClientIdAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/games",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Game> gamesPost(
        @Parameter(name = "GameCreateRequest", description = "", required = true) @Valid @RequestBody GameCreateRequest gameCreateRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"players\" : { \"viking\" : { \"name\" : \"name\" }, \"monster\" : { \"name\" : \"name\" } }, \"id\" : \"id\", \"type\" : \"type\", \"board\" : { \"selectedTile\" : { \"x\" : 1, \"y\" : 7 }, \"rows\" : [ { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] }, { \"cols\" : [ { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true }, { \"isMoveEnabled\" : true, \"figure\" : \"Empty\", \"isEnabled\" : true, \"isSelected\" : true } ] } ] } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
